{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let TaskService = class TaskService {\n  /*\n  CREATE\n  **/\n  createNewTask() {\n    const newTask = {\n      id: undefined,\n      content: \"\",\n      category: null,\n      isUrgent: false,\n      doneDate: null\n    };\n    return newTask;\n  }\n  addToList(newTask) {\n    newTask.id = this.generateId();\n    const toDoList = this.getToDos();\n    toDoList.push(newTask);\n    this.saveToDos(toDoList);\n  }\n  /*\n  UPDATE\n  **/\n  changeTaskCategory(currentTask, categorySelected) {\n    const newCategory = categorySelected;\n    currentTask.category = newCategory;\n  }\n  changeTaskPriority(currentTask) {\n    let isUrgent = currentTask.isUrgent;\n    isUrgent ? isUrgent = false : isUrgent = true;\n    currentTask.isUrgent = isUrgent;\n  }\n  changeTaskContent(currentTask, newContent) {\n    currentTask.content = newContent;\n  }\n  setAsDone(currentTask) {\n    const toDoList = this.getToDos();\n    const id = currentTask.id;\n    const taskToFind = toDoList.find(task => task.id === id);\n    let index;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n    currentTask.doneDate = new Date();\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n  // UNDONE\n  setAsUndone(currentTask) {\n    const toDoList = this.getToDos();\n    const id = currentTask.id;\n    const taskToFind = toDoList.find(task => task.id === id);\n    let index;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n    currentTask.doneDate = null;\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n  updateTask(currentTask) {\n    const toDoList = this.getToDos();\n    const id = currentTask.id;\n    const taskToFind = toDoList.find(task => task.id === id);\n    let index;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n  /*\n  GET\n  **/\n  getDoneTasks() {\n    const allTasks = this.getToDos();\n    const filterTasks = allTasks.filter(task => task.doneDate !== null);\n    return filterTasks;\n  }\n  getUnDoneTasks() {\n    const allTasks = this.getToDos();\n    const filterTasks = allTasks.filter(task => task.doneDate === null);\n    return filterTasks;\n  }\n  getTaskById(id) {\n    const toDoList = this.getToDos();\n    return toDoList.find(task => task.id === id);\n  }\n  // LocalStorage\n  createToDoStorage() {\n    const toDoStorage = JSON.stringify([]);\n    localStorage.setItem('todo', toDoStorage);\n  }\n  getToDos() {\n    const toDoList = localStorage.getItem('todo');\n    if (toDoList) {\n      return JSON.parse(toDoList);\n    } else {\n      this.createToDoStorage();\n      this.getToDos();\n    }\n  }\n  generateId() {\n    const toDoList = this.getToDos();\n    return toDoList.length > 0 ? toDoList.length + 1 : 1;\n  }\n  saveToDos(tasks) {\n    localStorage.setItem('todo', JSON.stringify(tasks));\n  }\n};\nTaskService = __decorate([Injectable({\n  providedIn: 'root'\n})], TaskService);","map":{"version":3,"names":["Injectable","TaskService","createNewTask","newTask","id","undefined","content","category","isUrgent","doneDate","addToList","generateId","toDoList","getToDos","push","saveToDos","changeTaskCategory","currentTask","categorySelected","newCategory","changeTaskPriority","changeTaskContent","newContent","setAsDone","taskToFind","find","task","index","indexOf","Date","splice","setAsUndone","updateTask","getDoneTasks","allTasks","filterTasks","filter","getUnDoneTasks","getTaskById","createToDoStorage","toDoStorage","JSON","stringify","localStorage","setItem","getItem","parse","length","tasks","__decorate","providedIn"],"sources":["/Users/bahaeddinechammakhi/Desktop/todo-app/src/app/services/task/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CategoryType, Task } from 'src/app/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  /* \n  CREATE\n  **/\n  createNewTask(): Task {\n    const newTask: Task = {\n      id: undefined,\n      content: \"\",\n      category: null,\n      isUrgent: false,\n      doneDate: null\n    }\n    return newTask;\n  }\n\n  addToList(newTask: Task): void {\n    newTask.id = this.generateId();\n    const toDoList = this.getToDos();\n    toDoList.push(newTask);\n    this.saveToDos(toDoList);\n  }\n\n  /* \n  UPDATE\n  **/\n  changeTaskCategory(currentTask: Task, categorySelected: string): void {\n    const newCategory = categorySelected as CategoryType;\n    currentTask.category = newCategory;\n  }\n\n  changeTaskPriority(currentTask: Task): void {\n    let isUrgent = currentTask.isUrgent;\n    isUrgent ? isUrgent = false : isUrgent = true;\n    currentTask.isUrgent = isUrgent;\n  }\n\n  changeTaskContent(currentTask: Task, newContent: string): void {\n    currentTask.content = newContent;\n  }\n\n  setAsDone(currentTask: Task) {\n    const toDoList: Task[] = this.getToDos();\n    const id = currentTask.id;\n    const taskToFind = toDoList.find(task => task.id === id);\n\n    let index: number;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n\n    currentTask.doneDate = new Date();\n\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n\n\n  // UNDONE\n  setAsUndone(currentTask: Task) {\n    const toDoList: Task[] = this.getToDos();\n    const id = currentTask.id;\n    const taskToFind = toDoList.find(task => task.id === id);\n\n    let index: number;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n\n    currentTask.doneDate = null;\n\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n\n  updateTask(currentTask: Task) {\n    const toDoList: Task[] = this.getToDos();\n    const id = currentTask.id;\n\n    const taskToFind = toDoList.find(task => task.id === id);\n\n    let index: number;\n    taskToFind ? index = toDoList?.indexOf(taskToFind) : index = -1;\n\n    toDoList.splice(index, 1);\n    toDoList.push(currentTask);\n    this.saveToDos(toDoList);\n  }\n\n\n  /* \n  GET\n  **/\n  getDoneTasks() {\n    const allTasks = this.getToDos();\n    const filterTasks = allTasks.filter((task: { doneDate: null; }) => task.doneDate !== null);\n    return filterTasks;\n  }\n\n  getUnDoneTasks(): Task[] {\n    const allTasks = this.getToDos();\n    const filterTasks = allTasks.filter((task: { doneDate: null; }) => task.doneDate === null);\n    return filterTasks;\n  }\n\n  getTaskById(id: number): Task {\n    const toDoList = this.getToDos();\n    return toDoList.find((task: { id: number; }) => task.id === id)\n  }\n\n\n  // LocalStorage\n  createToDoStorage() {\n    const toDoStorage = JSON.stringify([]);\n    localStorage.setItem('todo', toDoStorage);\n  }\n\n  getToDos() {\n    const toDoList = localStorage.getItem('todo');\n    if (toDoList) {\n      return JSON.parse(toDoList);\n    } else {\n      this.createToDoStorage();\n      this.getToDos();\n    }\n  }\n\n  generateId(): number {\n    const toDoList = this.getToDos();\n    return toDoList.length > 0 ? toDoList.length + 1 : 1;\n  }\n\n  saveToDos(tasks: Task[]): void {\n    localStorage.setItem('todo', JSON.stringify(tasks))\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}