{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/task/task.service\";\nimport * as i3 from \"../../components/task-form/task-form.component\";\nexport class TaskModificationComponent {\n  constructor(activatedRoute, taskService, route) {\n    this.activatedRoute = activatedRoute;\n    this.taskService = taskService;\n    this.route = route;\n    this.isFormCompleted = false;\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  isCompleted() {\n    if (this.currentTask.content.length > 0 && this.currentTask?.category !== null) {\n      this.isFormCompleted = true;\n    } else {\n      this.isFormCompleted = false;\n    }\n  }\n  updateTask(updatedTask) {\n    this.currentTask = updatedTask;\n    this.isCompleted();\n  }\n  getTask() {\n    const id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.currentTask = this.taskService.getTaskById(id);\n  }\n  sendUpdateTask() {\n    this.taskService.updateTask(this.currentTask);\n    this.route.navigate([\"\"]);\n  }\n}\nTaskModificationComponent.ɵfac = function TaskModificationComponent_Factory(t) {\n  return new (t || TaskModificationComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i1.Router));\n};\nTaskModificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskModificationComponent,\n  selectors: [[\"app-task-modification\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"currentTask\", \"updateTask\"], [\"type\", \"submit\", 1, \"blue-button\", 3, \"disabled\", \"click\"]],\n  template: function TaskModificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"app-task-form\", 0);\n      i0.ɵɵlistener(\"updateTask\", function TaskModificationComponent_Template_app_task_form_updateTask_1_listener($event) {\n        return ctx.updateTask($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function TaskModificationComponent_Template_button_click_2_listener() {\n        return ctx.sendUpdateTask();\n      });\n      i0.ɵɵtext(3, \"Modifier ma t\\u00E2che\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"currentTask\", ctx.currentTask);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.isFormCompleted);\n    }\n  },\n  dependencies: [i3.TaskFormComponent],\n  styles: [\"section[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: space-between;\\n    height: 85vh;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdGFzay1tb2RpZmljYXRpb24vdGFzay1tb2RpZmljYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsic2VjdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGhlaWdodDogODV2aDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["TaskModificationComponent","constructor","activatedRoute","taskService","route","isFormCompleted","ngOnInit","getTask","isCompleted","currentTask","content","length","category","updateTask","updatedTask","id","Number","snapshot","paramMap","get","getTaskById","sendUpdateTask","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","TaskService","Router","selectors","decls","vars","consts","template","TaskModificationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TaskModificationComponent_Template_app_task_form_updateTask_1_listener","$event","ɵɵelementEnd","TaskModificationComponent_Template_button_click_2_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["/Users/bahaeddinechammakhi/Desktop/todo-app/src/app/pages/task-modification/task-modification.component.ts","/Users/bahaeddinechammakhi/Desktop/todo-app/src/app/pages/task-modification/task-modification.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task/task.service';\nimport { Task } from 'src/app/task';\n\n@Component({\n  selector: 'app-task-modification',\n  templateUrl: './task-modification.component.html',\n  styleUrls: ['./task-modification.component.css']\n})\nexport class TaskModificationComponent {\n\n  currentTask?: Task;\n\n  isFormCompleted: boolean = false;\n\n  constructor(private activatedRoute: ActivatedRoute, private taskService: TaskService, private route: Router) { }\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  isCompleted() {\n    if (this.currentTask!.content.length > 0 && this.currentTask?.category !== null) {\n      this.isFormCompleted = true;\n    } else {\n      this.isFormCompleted = false;\n    }\n  }\n\n  updateTask(updatedTask: Task) {\n    this.currentTask = updatedTask;\n    this.isCompleted();\n  }\n\n  getTask() {\n    const id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.currentTask = this.taskService.getTaskById(id);\n  }\n\n  sendUpdateTask() {\n    this.taskService.updateTask(this.currentTask!);\n    this.route.navigate([\"\"]);\n  }\n\n}\n","<section>\n<app-task-form [currentTask]=\"currentTask\" (updateTask)=\"updateTask($event)\"></app-task-form>\n\n<button class=\"blue-button\" [disabled]=\"!isFormCompleted\" (click)=\"sendUpdateTask()\" type=\"submit\">Modifier ma tâche</button>\n</section>"],"mappings":";;;;AAUA,OAAM,MAAOA,yBAAyB;EAMpCC,YAAoBC,cAA8B,EAAUC,WAAwB,EAAUC,KAAa;IAAvF,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAFnG,KAAAC,eAAe,GAAY,KAAK;EAE+E;EAE/GC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACC,WAAY,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACF,WAAW,EAAEG,QAAQ,KAAK,IAAI,EAAE;MAC/E,IAAI,CAACP,eAAe,GAAG,IAAI;KAC5B,MAAM;MACL,IAAI,CAACA,eAAe,GAAG,KAAK;;EAEhC;EAEAQ,UAAUA,CAACC,WAAiB;IAC1B,IAAI,CAACL,WAAW,GAAGK,WAAW;IAC9B,IAAI,CAACN,WAAW,EAAE;EACpB;EAEAD,OAAOA,CAAA;IACL,MAAMQ,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACd,cAAc,CAACe,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClE,IAAI,CAACV,WAAW,GAAG,IAAI,CAACN,WAAW,CAACiB,WAAW,CAACL,EAAE,CAAC;EACrD;EAEAM,cAAcA,CAAA;IACZ,IAAI,CAAClB,WAAW,CAACU,UAAU,CAAC,IAAI,CAACJ,WAAY,CAAC;IAC9C,IAAI,CAACL,KAAK,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3B;;AAjCWtB,yBAAyB,C;mBAAzBA,yBAAyB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAI,MAAA;AAAA;AAAzB7B,yBAAyB,C;QAAzBA,yBAAyB;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVtCb,EAAA,CAAAe,cAAA,cAAS;MACkCf,EAAA,CAAAgB,UAAA,wBAAAC,uEAAAC,MAAA;QAAA,OAAcJ,GAAA,CAAAxB,UAAA,CAAA4B,MAAA,CAAkB;MAAA,EAAC;MAAClB,EAAA,CAAAmB,YAAA,EAAgB;MAE7FnB,EAAA,CAAAe,cAAA,gBAAmG;MAAzCf,EAAA,CAAAgB,UAAA,mBAAAI,2DAAA;QAAA,OAASN,GAAA,CAAAhB,cAAA,EAAgB;MAAA,EAAC;MAAeE,EAAA,CAAAqB,MAAA,6BAAiB;MAAArB,EAAA,CAAAmB,YAAA,EAAS;;;MAF9GnB,EAAA,CAAAsB,SAAA,GAA2B;MAA3BtB,EAAA,CAAAuB,UAAA,gBAAAT,GAAA,CAAA5B,WAAA,CAA2B;MAEdc,EAAA,CAAAsB,SAAA,GAA6B;MAA7BtB,EAAA,CAAAuB,UAAA,cAAAT,GAAA,CAAAhC,eAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}