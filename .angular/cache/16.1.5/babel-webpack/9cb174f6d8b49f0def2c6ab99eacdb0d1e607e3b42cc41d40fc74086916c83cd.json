{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./task-modification.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./task-modification.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task/task.service';\nexport let TaskModificationComponent = (_class = class TaskModificationComponent {\n  constructor(activatedRoute, taskService, route) {\n    this.activatedRoute = activatedRoute;\n    this.taskService = taskService;\n    this.route = route;\n    this.isFormCompleted = false;\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  isCompleted() {\n    if (this.currentTask.content.length > 0 && this.currentTask?.category !== null) {\n      this.isFormCompleted = true;\n    } else {\n      this.isFormCompleted = false;\n    }\n  }\n  updateTask(updatedTask) {\n    this.currentTask = updatedTask;\n    this.isCompleted();\n  }\n  getTask() {\n    const id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.currentTask = this.taskService.getTaskById(id);\n  }\n  sendUpdateTask() {\n    this.taskService.updateTask(this.currentTask);\n    this.route.navigate([\"\"]);\n  }\n}, _class.ctorParameters = () => [{\n  type: ActivatedRoute\n}, {\n  type: TaskService\n}, {\n  type: Router\n}], _class);\nTaskModificationComponent = __decorate([Component({\n  selector: 'app-task-modification',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TaskModificationComponent);","map":{"version":3,"names":["Component","ActivatedRoute","Router","TaskService","TaskModificationComponent","_class","constructor","activatedRoute","taskService","route","isFormCompleted","ngOnInit","getTask","isCompleted","currentTask","content","length","category","updateTask","updatedTask","id","Number","snapshot","paramMap","get","getTaskById","sendUpdateTask","navigate","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/bahaeddinechammakhi/Desktop/todo-app/src/app/pages/task-modification/task-modification.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task/task.service';\nimport { Task } from 'src/app/task';\n\n@Component({\n  selector: 'app-task-modification',\n  templateUrl: './task-modification.component.html',\n  styleUrls: ['./task-modification.component.css']\n})\nexport class TaskModificationComponent {\n\n  currentTask?: Task;\n\n  isFormCompleted: boolean = false;\n\n  constructor(private activatedRoute: ActivatedRoute, private taskService: TaskService, private route: Router) { }\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  isCompleted() {\n    if (this.currentTask!.content.length > 0 && this.currentTask?.category !== null) {\n      this.isFormCompleted = true;\n    } else {\n      this.isFormCompleted = false;\n    }\n  }\n\n  updateTask(updatedTask: Task) {\n    this.currentTask = updatedTask;\n    this.isCompleted();\n  }\n\n  getTask() {\n    const id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.currentTask = this.taskService.getTaskById(id);\n  }\n\n  sendUpdateTask() {\n    this.taskService.updateTask(this.currentTask!);\n    this.route.navigate([\"\"]);\n  }\n\n}\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AACxD,SAASC,WAAW,QAAQ,oCAAoC;AAQzD,WAAMC,yBAAyB,IAAAC,MAAA,GAA/B,MAAMD,yBAAyB;EAMpCE,YAAoBC,cAA8B,EAAUC,WAAwB,EAAUC,KAAa;IAAvF,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAFnG,KAAAC,eAAe,GAAY,KAAK;EAE+E;EAE/GC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACC,WAAY,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACF,WAAW,EAAEG,QAAQ,KAAK,IAAI,EAAE;MAC/E,IAAI,CAACP,eAAe,GAAG,IAAI;KAC5B,MAAM;MACL,IAAI,CAACA,eAAe,GAAG,KAAK;;EAEhC;EAEAQ,UAAUA,CAACC,WAAiB;IAC1B,IAAI,CAACL,WAAW,GAAGK,WAAW;IAC9B,IAAI,CAACN,WAAW,EAAE;EACpB;EAEAD,OAAOA,CAAA;IACL,MAAMQ,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACd,cAAc,CAACe,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClE,IAAI,CAACV,WAAW,GAAG,IAAI,CAACN,WAAW,CAACiB,WAAW,CAACL,EAAE,CAAC;EACrD;EAEAM,cAAcA,CAAA;IACZ,IAAI,CAAClB,WAAW,CAACU,UAAU,CAAC,IAAI,CAACJ,WAAY,CAAC;IAC9C,IAAI,CAACL,KAAK,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3B;;;;;;;;AAjCWvB,yBAAyB,GAAAwB,UAAA,EALrC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,uBAAuB;EACjCC,QAAA,EAAAC,oBAAiD;;CAElD,CAAC,C,EACW3B,yBAAyB,CAmCrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}